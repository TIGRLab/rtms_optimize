#!/bin/bash

#ARGUMENTS:
#	subject			BIDS subject name, will be used as output folder and suffix in simnibs output
#				folder. simnibs output folder is $SUBJECTS_DIR environment variable
#	metric			Metric file in MNI space
#	ciftify			Subject ciftify base directory
#	outdir			Output base directory, will create <subject>/* sub-structure in here

#DESCRIPTION:
#Wrapper script for transforming metric data starting from MNI volumetric space to simnibs/freesurfer volume space as a cortical ribbon.
#
#STAGES:
#1. Volume --> Surface mapping
#2. Surface-based resampling into native freesurfer mesh
#3. Ribbon-constrained Surface --> Volume mapping 
# The outputs of this script can be used for tetrahedral Volume --> FEM projection
#
#INPUT STRUCTURE
#	House-cleaning functions

close(){
	STATUS=$?
	if [ "$STATUS" == 0 ]; then
		echo "ribbon_projection finished, Exiting..."
	else
		echo "ribbon_projection failed!"
		echo "Exiting!"
		exit 1
	fi

}

stdprint(){
	echo "#######################"
	echo "$1"
	echo "#######################"
}

checkvar(){

	if  [ -z "$1" ]; then

		echo "$2 doesn't exist!"
		exit 1

	fi

}

trap close EXIT

#	STAGE 0: Check inputs and create pre-requisite directories
subject=$1
metric=$2
ciftify=$3
outdir=$4

checkvar "$subject" subject
checkvar "$metric" metric
checkvar "$ciftify" ciftify
checkvar "$outdir" outdir
checkvar "$SUBJECTS_DIR" SUBJECTS_DIR

mkdir -p "$outdir/$subject"

#	STAGE 1: Convert Freesurfer outputs into GIFTI format
mkdir -p "$outdir/$subject/surfs"
for h in 'L' 'R'; do
	"$RTMSBIN/simfs_to_gifti" "$subject" "$h" "$outdir/$subject/surfs"
done

#	STAGE 2: Register simnibs/freesurfer surfaces to ciftify 
for h in 'lh' 'rh'; do
	"$RTMSBIN/register_fs_to_ciftify" "$subject" "$h" "$outdir/$subject/surfs"
done

#	STAGE 3: Map volume metric to surface, resample to simfs, then ribbon project
mkdir -p "$outdir/$subject/func"
for h in 'L' 'R'; do

	#Map metric --> surface
	metric_surface="$outdir/$subject/func/$subject.$h.zmap.shape.gii"
	wb_command -volume-to-surface-mapping "$metric" \
	     	"$ciftify/MNINonLinear/${subject}.$h.midthickness.164k_fs_LR.surf.gii" \
		"$metric_surface" \
		-ribbon-constrained \
		"$ciftify/MNINonLinear/${subject}.$h.white.164k_fs_LR.surf.gii" \
		"$ciftify/MNINonLinear/${subject}.$h.pial.164k_fs_LR.surf.gii"

	#Resample to simfs
	resampled_metric="$outdir/$subject/func/$subject.$h.zmap_simfs.shape.gii"
	wb_command -metric-resample "$metric_surface" \
		"$ciftify/MNINonLinear/${subject}.$h.sphere.164k_fs_LR.surf.gii" \
		"$outdir/$subject/surfs/fs_${subject}.$h.sphere.reg_msm.surf.gii" \
		"BARYCENTRIC" \
		"$resampled_metric"

	#Use ribbon based projection
	simfs_ribbon="$outdir/$subject/func/$subject.$h.zmap_simfs.nii.gz"
	wb_command -metric-to-volume-mapping "$resampled_metric" \
		"$outdir/$subject/surfs/fs_${subject}.$h.midthickness.surf.gii" \
		"$SUBJECTS_DIR/m2m_${subject}/T1fs_nu_conform.nii.gz" \
		"$simfs_ribbon" \
		-ribbon-constrained \
		"$outdir/$subject/surfs/fs_${subject}.$h.white.surf.gii" \
		"$outdir/$subject/surfs/fs_${subject}.$h.pial.surf.gii"
		
done

